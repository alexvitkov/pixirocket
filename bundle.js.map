{
  "version": 3,
  "sources": ["src/Config.js", "src/ScreenText.js", "src/FuelBar.js", "src/Util.js", "src/FloatingBottomPart.js", "src/Rocket.js", "src/App.js"],
  "sourcesContent": ["export const SCREEN_WIDTH = 800;\nexport const SCREEN_HEIGHT = 600;\n\nexport const ROCKET_SCALE = 0.015;\n\n// The following control how the animation of the bottom part looks\n// after it gets detached from the rocket\nexport const BottomPart = {\n    GRAVITY_SCALE: 0.14,\n    ROTATION_SCALE: 0.001,\n    MAX_ROTATION_SPEED: 0.1,\n    SCALE_DECREASE: 0.003\n}\n\n// The following control the labels that appear in the middle of the screen\nexport const ScreenText = {\n    INITIAL_Y_SPEED: 1.5,\n    Y_SPEED_CHANGE: -0.015,\n    ALPHA_DECREASE: 0.007,\n};\n", "import App from \"./App\";\nimport * as Config from \"./Config\";\n\n\nconst groups = [];\n\n\nclass Text {\n    constructor(label, animatePosition) {\n        this.scaleAdd = 0;\n        this.yAdd = Config.ScreenText.INITIAL_Y_SPEED;\n        this.text = label;\n        this.isAlive = true;\n        this.animatePosition = animatePosition;\n\n        this.tickerFn = this.tick.bind(this);\n        App.ticker.add(this.tickerFn);\n\n    }\n\n    destroy() {\n        this.text.destroy();\n        this.isAlive = false;\n        App.ticker.remove(this.tickerFn);\n    }\n\n    tick() {\n        const dt = App.ticker.deltaTime;\n        this.scaleAdd -= 0.0001 * dt;\n\n        if (this.animatePosition) {\n            const scale = this.text.scale.x + this.scaleAdd * dt;\n            this.text.scale.set(scale);\n\n            this.yAdd += Config.ScreenText.Y_SPEED_CHANGE * dt;\n            if (this.yAdd < 0)\n                this.yAdd = 0;\n            this.text.y -= this.yAdd * dt;\n        }\n\n        this.text.alpha -= Config.ScreenText.ALPHA_DECREASE * dt;\n        if (this.text.alpha <= 0)\n            this.destroy();\n    }\n}\n\nexport function write(text, options) {\n    let label = new PIXI.Text(text, {\n        fontFamily: 'Arial',\n        fontSize: 40,\n        fill: 'yellow',\n        stroke: 'black',\n        align: 'center',\n        strokeThickness: 5,\n    });\n\n    label.zIndex = 1000;\n\n    if (options && options.location === 'left') {\n        label.x = 0;\n        label.y = Config.SCREEN_HEIGHT;\n        label.anchor.set(0, 1);\n    }\n    else {\n        label.x = Config.SCREEN_WIDTH / 2;\n        label.y = Config.SCREEN_HEIGHT / 2;\n        label.anchor.set(.5);\n    }\n\n    const textObj = new Text(label, !(options && options.location === 'left'));\n\n    if (options && options.group !== undefined) {\n        if (groups[options.group] && groups[options.group].isAlive) {\n            groups[options.group].destroy();\n        }\n        groups[options.group] = textObj;\n    }\n\n\n    App.stage.addChild(label);\n}\n", "\nexport default class FuelBar {\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n\n        this.container = new PIXI.Container();\n        this.container.y = -height;\n\n        this.fuelBar = new PIXI.Graphics();\n        this.container.addChild(this.fuelBar);\n\n        this.update(1.0);\n    }\n\n    update(percentage) {\n        this.fuelBar.clear();\n\n        // Draw the background\n        this.fuelBar.beginFill(0x000000);\n        this.fuelBar.lineStyle(2, 0xFF0000);\n        this.fuelBar.drawRect(0, 0, this.width, this.height);\n\n        // Draw the filled part\n        this.fuelBar.beginFill(0xFFFF00);\n        this.fuelBar.lineStyle(2, 0xFF0000);\n        this.fuelBar.drawRect(0, (1.0 - percentage) * this.height, this.width, percentage * this.height);\n    }\n}\n", "\nexport function lerp(min, max, t) {\n    return t * (max - min) + min;\n}\n\nexport function random(min, max) {\n    return lerp(min, max, Math.random());\n}\n\nexport function clamp(val, min, max) {\n    if (val < min)\n        return min;\n    if (val > max)\n        return max;\n    return val;\n}\n", "import { random, lerp, clamp } from \"./Util\";\nimport * as Config from \"./Config\";\n\nexport default class FloatingBottomPart {\n    constructor(sprite, initialVelocity) {\n        this.sprite = sprite;\n\n        this.velocity = initialVelocity;\n        this.angularVelocity = 0;\n\n        // Get the global position of the sprite, so we can preserve it\n        // after we reparent it to the root stage\n        const pos = sprite.getGlobalPosition();\n        app.stage.addChild(sprite);\n        sprite.x = pos.x;\n        sprite.y = pos.y;\n\n        this.tickFn = this.tick.bind(this);\n        app.ticker.add(this.tickFn);\n    }\n\n    tick() {\n        const dt = app.ticker.deltaTime;\n        this.velocity += Config.BottomPart.GRAVITY_SCALE * dt;\n\n        this.angularVelocity += Config.BottomPart.ROTATION_SCALE * dt;\n        if (this.angularVelocity > Config.BottomPart.MAX_ROTATION_SPEED)\n            this.angularVelocity = Config.BottomPart.MAX_ROTATION_SPEED;\n\n        this.sprite.y += Config.BottomPart.GRAVITY_SCALE * this.velocity;\n        this.sprite.rotation += this.angularVelocity * dt;\n\n        // The scale decreases over time to give the effect the part is flying away\n        // We delete the object after it reaches 0\n        this.sprite.scale.set(this.sprite.scale.x - Config.BottomPart.SCALE_DECREASE * dt);\n        if (this.sprite.scale.x < 0) {\n            app.ticker.remove(this.tickFn);\n            this.sprite.destroy();\n        }\n    }\n}\n", "import * as Config from \"./Config\";\nimport FuelBar from \"./FuelBar\";\nimport FloatingBottomPart from \"./FloatingBottomPart\";\nimport app from \"./App\";\nimport { timeScale } from \"./App\";\nimport * as ScreenText from \"./ScreenText\";\nimport { random, lerp, clamp } from \"./Util\";\n\n// Load the rocket textures\nconst rocketTopTexture = PIXI.Texture.from(\"assets/rocket_top.png\");\nconst rocketBottomTexture = PIXI.Texture.from(\"assets/rocket_bottom.png\");\nconst thrustTexture = PIXI.Texture.from(\"assets/thrust.png\");\n\nexport default class Rocket {\n    constructor(x, rocketData) {\n        this.rocketData = rocketData;\n\n        // Current stage of the rocket, either 1 or 2\n        this.stage = 1;\n\n        // Load the fuel capacity from the rocket data\n        this.stage1Fuel = rocketData.first_stage.fuel_amount_tons;;\n        this.stage2Fuel = rocketData.second_stage.fuel_amount_tons;;\n\n        // Current fuel value\n        this.fuel = this.stage1Fuel + this.stage2Fuel;\n\n        // This gets set to true from this.launch() after the initial countdown\n        this.launched = false;\n\n        // Container for the rocket sprites, the label, the thrust and the fuel bars\n        this.container = new PIXI.Container();\n\n        // We resize the rockets based on the data from the JSON to make them look nicer\n        this.rocketScale = rocketData.height.meters * Config.ROCKET_SCALE;\n        this.rocketSize = this.rocketScale * (rocketTopTexture.height + rocketBottomTexture.height);\n\n        // Create the rocket itself\n        this.rocketTop = new PIXI.Sprite(rocketTopTexture);\n        this.rocketTop.anchor.set(0.5, 1.5);\n        this.rocketTop.scale.set(this.rocketScale)\n\n        this.rocketBottom = new PIXI.Sprite(rocketBottomTexture);\n        this.rocketBottom.scale.set(this.rocketScale);\n        this.rocketBottom.anchor.set(0.5, .5);\n        this.rocketBottom.y = -rocketBottomTexture.height * this.rocketScale * 0.5;\n\n\n        // Create the thrust\n        this.thrustSprite = new PIXI.Sprite(thrustTexture);\n        this.thrustSprite.anchor.set(0.5, 0.1);\n\n        // The order in which we add the sprites matters\n        // the thrust must be behind rocketBottom\n        this.container.addChild(this.thrustSprite);\n        this.container.addChild(this.rocketBottom);\n        this.container.addChild(this.rocketTop);\n\n        // Create a label to show the rocket name\n        let label = new PIXI.Text(rocketData.name, { fontFamily: 'Arial', fontSize: 20, fill: 0xffffff });\n        label.anchor.set(0.5);\n        label.y = -this.rocketSize - 15;\n        this.container.addChild(label);\n\n        // Stage 1 fuel bar\n        this.fuelBar1 = new FuelBar(10, this.rocketSize);\n        this.container.addChild(this.fuelBar1.container);\n        this.fuelBar1.container.x = this.rocketTop.width/2 + 5;\n\n        // Stage 2 fuel bar\n        this.fuelBar2 = new FuelBar(10, this.rocketSize * this.stage2Fuel / (this.stage1Fuel + this.stage2Fuel));\n        this.container.addChild(this.fuelBar2.container);\n        this.fuelBar2.container.x = this.fuelBar1.container.x + 10;\n\n        // Initial position of the container\n        this.container.x = x;\n        app.stage.addChild(this.container);\n\n        // Register tick function\n        this.tickFn = this.tick.bind(this);\n        app.ticker.add(this.tickFn);\n    }\n\n    launch() {\n        this.launched = true;\n    }\n\n    destroy() {\n        if (this.onDestroyCallback)\n            this.onDestroyCallback();\n\n        this.container.destroy();\n        ScreenText.write(`${this.rocketData.name} launched!`);\n        app.ticker.remove(this.tickFn);\n    }\n\n    updateY() {\n        let p = this.fuel / (this.stage1Fuel + this.stage2Fuel);\n\n        // Rockets don't launch at a constant speed, they get faster\n        // fade-in interpolation looks nicer.\n        p = 1 - (1 - p) * (1 - p); \n\n        let oldY = this.container.y;\n        let newY = (Config.SCREEN_HEIGHT ) * p;\n        this.container.y = newY;\n\n        // yVelocity is needed for when we lose the bottom part of the rocket\n        // so we can give it a sensible initial velocity\n        // this is not accurate at all but works OK for that purpose\n        this.yVelocity = (newY - oldY) / app.ticker.deltaTime;\n    }\n\n    enterStage2() {\n        if (this.stage == 2)\n            return;\n\n        this.stage = 2;\n\n        // Lose the bottom part\n        new FloatingBottomPart(this.rocketBottom, clamp(this.yVelocity, -10, 0));\n\n    }\n\n    onDestroy(fn) {\n        this.onDestroyCallback = fn;\n    }\n\n    tick() {\n        this.updateY();\n\n        if (!this.launched)\n            return;\n\n        const dt = app.ticker.deltaTime;\n        const dt_seconds = app.ticker.deltaMS / 1000;\n\n        this.fuel -= timeScale * dt_seconds;\n\n        if (this.fuel < this.stage2Fuel && this.stage == 1)\n            this.enterStage2();\n\n        if (this.fuel <= 0) {\n            this.destroy();\n            return;\n        }\n\n        this.thrustSprite.rotation = Math.random() * 0.1;\n        this.thrustSprite.scale.set(this.rocketScale * random(0.9, 1.1));\n\n        this.fuelBar1.update(clamp((this.fuel - this.stage2Fuel) / this.stage1Fuel, 0, 1));\n        this.fuelBar2.update(clamp(this.fuel / this.stage2Fuel, 0, 1));\n\n        if (this.stage == 2) {\n            // dirty hack to reposition the thrust sprite after the second stage\n            // so it doesn't float where the bottom part used to be\n            const thrustTargetY = -this.rocketScale * rocketBottomTexture.height;\n            this.thrustSprite.y = lerp(this.thrustSprite.y, thrustTargetY, 0.1 * dt);\n        }\n    }\n};\n", "import * as Config from \"./Config\";\nimport * as Text from \"./ScreenText\";\nimport Rocket from \"./Rocket\";\n\nvar rockets;\nvar aliveRocketsCount;\n\nexport default app = new PIXI.Application({\n    width: Config.SCREEN_WIDTH,\n    height: Config.SCREEN_HEIGHT,\n});\n\n\n// Since the rockets have vastly different fuel capacities\n// and the problem requires that they all burn 1 ton every second\n// they will finish in vastly different times.\n// Without a time scale option, the starship will take like 5 minutes to deplete its fuel\nexport var timeScale = 20.0;\nwindow['increaseTimeScale'] = function() {\n    timeScale *= 1.5;\n    Text.write(`Time scale: ${Math.floor(timeScale)}:1`, {\n        location: 'left',\n        group: 1,\n    });\n}\n\n// launchRockets writes the 3, 2, 1, Go! text on the screen and calls the launch method on all the rockets\nfunction launchRockets(afterSeconds) {\n    Text.write(afterSeconds == 0 ? \"Launch!\" : afterSeconds);\n\n    aliveRocketsCount = rockets.length;\n\n    if (afterSeconds == 0) {\n        for (const rocket of rockets) {\n            rocket.launch();\n\n            // Show 'Success' once all rockets have launched\n            rocket.onDestroy(() => {\n                aliveRocketsCount -= 1;\n\n                if (aliveRocketsCount == 0)\n                    setTimeout(() => Text.write('Success!'), 1000);\n            });\n\n        }\n    }\n    else {\n        setTimeout(() => launchRockets(afterSeconds - 1), 1000);\n    }\n}\n\n\nasync function start() {\n    // Add the PixiJS canvas to the document\n    document.body.appendChild(app.view);\n\n    // Elements need to be sortable to make sure ScreenText is always on top\n    app.stage.sortableChildren = true;\n\n    // Load the background\n    const background = PIXI.Sprite.from(\"assets/bg.jpg\");\n    background.width = Config.SCREEN_WIDTH;\n    background.height = Config.SCREEN_HEIGHT;\n    app.stage.addChild(background);\n\n\n    // Load the rocket data from the SpaceX API\n    const resp = await fetch(\"https://api.spacexdata.com/v2/rockets\");\n    const data = await resp.json();\n\n    // distBetweenRockets is the pixel distance between two rockets.\n    // We divide by data.length + 1 so we have some space between the first/last rocket and the screen edges\n    let distBetweenRockets = Config.SCREEN_WIDTH / (data.length + 1);\n\n    let x = 0;\n    rockets = data.map(rocketData => new Rocket(x += distBetweenRockets, rocketData));\n\n    launchRockets(3);\n}\n\nstart();\n"],
  "mappings": "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",
  "names": []
}
